/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyecto1;

import analisis.parser;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import java_cup.runtime.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author jos√©
 */
public class Analizador extends javax.swing.JFrame {
    private File archivoActual;

    /**
     * Creates new form Analizador
     */
    public Analizador() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        ENTRADATXT = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        SALIDATXT = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jmb_BarraMenu = new javax.swing.JMenuBar();
        jm_Archivo = new javax.swing.JMenu();
        jm_NuevoArchivo = new javax.swing.JMenuItem();
        jm_Guardar = new javax.swing.JMenuItem();
        jm_GuardarComo = new javax.swing.JMenuItem();
        jm_Herramientas = new javax.swing.JMenu();
        jm_Ejecutar = new javax.swing.JMenuItem();
        jm_Reportes = new javax.swing.JMenu();
        jm_ReporteTokens = new javax.swing.JMenuItem();
        jm_ReporteErrores = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ENTRADATXT.setColumns(20);
        ENTRADATXT.setRows(5);
        jScrollPane2.setViewportView(ENTRADATXT);

        SALIDATXT.setEditable(false);
        SALIDATXT.setColumns(20);
        SALIDATXT.setRows(5);
        jScrollPane3.setViewportView(SALIDATXT);

        jLabel1.setText("ENTRADA");

        jLabel2.setText("CONSOLA");

        jm_Archivo.setText("Archivo");

        jm_NuevoArchivo.setText("Nuevo Archivo");
        jm_NuevoArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_NuevoArchivoActionPerformed(evt);
            }
        });
        jm_Archivo.add(jm_NuevoArchivo);

        jm_Guardar.setText("Guardar");
        jm_Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_GuardarActionPerformed(evt);
            }
        });
        jm_Archivo.add(jm_Guardar);

        jm_GuardarComo.setText("Guardar Como");
        jm_GuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_GuardarComoActionPerformed(evt);
            }
        });
        jm_Archivo.add(jm_GuardarComo);

        jmb_BarraMenu.add(jm_Archivo);

        jm_Herramientas.setText("Herramientas");

        jm_Ejecutar.setText("Ejecutar");
        jm_Ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jm_EjecutarActionPerformed(evt);
            }
        });
        jm_Herramientas.add(jm_Ejecutar);

        jmb_BarraMenu.add(jm_Herramientas);

        jm_Reportes.setText("Reportes");

        jm_ReporteTokens.setText("Reporte de tokens");
        jm_Reportes.add(jm_ReporteTokens);

        jm_ReporteErrores.setText("Reporte de errores");
        jm_Reportes.add(jm_ReporteErrores);

        jmb_BarraMenu.add(jm_Reportes);

        setJMenuBar(jmb_BarraMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 387, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jm_NuevoArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_NuevoArchivoActionPerformed
        // Limpiar el contenido del JTextArea
        ENTRADATXT.setText("");

        // Permitir al usuario seleccionar un nuevo archivo
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Crear nuevo archivo");
        fileChooser.setSelectedFile(new File("nuevoArchivo.ca"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            archivoActual = fileChooser.getSelectedFile();
            try {
                if (archivoActual.createNewFile()) {
                    JOptionPane.showMessageDialog(this, "Archivo " + archivoActual.getName() + " creado exitosamente.");
                } else {
                    JOptionPane.showMessageDialog(this, "El archivo " + archivoActual.getName() + " ya existe.");
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al crear el archivo " + archivoActual.getName() + ".");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jm_NuevoArchivoActionPerformed

    private void jm_GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_GuardarActionPerformed
        if (archivoActual != null) {
            try (FileWriter writer = new FileWriter(archivoActual)) {
                writer.write(ENTRADATXT.getText());
                JOptionPane.showMessageDialog(this, "Archivo " + archivoActual.getName() + " guardado exitosamente.");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al guardar el archivo " + archivoActual.getName() + ".");
                e.printStackTrace();
            }
        } else {
            return; 
        }    }//GEN-LAST:event_jm_GuardarActionPerformed

    private void jm_GuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_GuardarComoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar como");
        fileChooser.setSelectedFile(new File("nuevoArchivo.ca"));

        int userSelection = fileChooser.showSaveDialog(this);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            archivoActual = fileChooser.getSelectedFile();
            try (FileWriter writer = new FileWriter(archivoActual)) {
                writer.write(ENTRADATXT.getText());
                JOptionPane.showMessageDialog(this, "Archivo " + archivoActual.getName() + " guardado exitosamente.");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Error al guardar el archivo " + archivoActual.getName() + ".");
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jm_GuardarComoActionPerformed

    private void jm_EjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jm_EjecutarActionPerformed
    String texto = ENTRADATXT.getText();
        try {
            scanner s = new scanner(new BufferedReader(new StringReader(texto)));
            parser p = new parser((Scanner) s);
            var result = p.parse();

            SALIDATXT.setText((String) result.value);
        } catch (Exception e) {
            System.out.println(e);
        }      }//GEN-LAST:event_jm_EjecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Analizador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Analizador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea ENTRADATXT;
    private javax.swing.JTextArea SALIDATXT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenu jm_Archivo;
    private javax.swing.JMenuItem jm_Ejecutar;
    private javax.swing.JMenuItem jm_Guardar;
    private javax.swing.JMenuItem jm_GuardarComo;
    private javax.swing.JMenu jm_Herramientas;
    private javax.swing.JMenuItem jm_NuevoArchivo;
    private javax.swing.JMenuItem jm_ReporteErrores;
    private javax.swing.JMenuItem jm_ReporteTokens;
    private javax.swing.JMenu jm_Reportes;
    private javax.swing.JMenuBar jmb_BarraMenu;
    // End of variables declaration//GEN-END:variables
}
